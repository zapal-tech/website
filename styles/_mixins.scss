@use 'sass:list';
@import './media';
@import './typography';
@import './colors';
@import './gaps';

@mixin pseudo($content: '', $display: block, $position: absolute) {
  position: $position;
  display: $display;
  content: $content;
}

@mixin media($breakpoint) {
  $valid-breakpoint-names: phone, large-phone, tablet, large-tablet, laptop, large-laptop, desktop;

  @if not list.index($valid-breakpoint-names, $breakpoint) {
    @error "#{$breakpoint} is not a valid breakpoint name. Expected one of #{$valid-breakpoint-names}.";
  }

  @if $breakpoint == phone {
    @media only screen and (min-width: $breakpoint-phone) {
      @content;
    }
  }

  @if $breakpoint == large-phone {
    @media only screen and (min-width: $breakpoint-large-phone) {
      @content;
    }
  }

  @if $breakpoint == tablet {
    @media only screen and (min-width: $breakpoint-tablet) {
      @content;
    }
  }

  @if $breakpoint == large-tablet {
    @media only screen and (min-width: $breakpoint-large-tablet) {
      @content;
    }
  }

  @if $breakpoint == laptop {
    @media only screen and (min-width: $breakpoint-laptop) {
      @content;
    }
  }

  @if $breakpoint == large-laptop {
    @media only screen and (min-width: $breakpoint-large-laptop) {
      @content;
    }
  }

  @if $breakpoint == desktop {
    @media only screen and (min-width: $breakpoint-desktop) {
      @content;
    }
  }
}

@mixin text-heading1 {
  font-size: $heading1-font-size;
  font-weight: $heading1-font-weight;
  line-height: $heading1-line-height;

  @include media(laptop) {
    font-size: $heading1-font-size-laptop;
  }

  @include media(large-laptop) {
    font-size: $heading1-font-size-large-laptop;
  }
}

@mixin text-heading2 {
  font-size: $heading2-font-size;
  font-weight: $heading2-font-weight;
  line-height: $heading2-line-height;

  @include media(laptop) {
    font-size: $heading2-font-size-laptop;
    font-weight: $heading2-font-weight-laptop;
  }

  @include media(large-laptop) {
    font-size: $heading2-font-size-large-laptop;
  }
}

@mixin text-heading3 {
  font-size: $heading3-font-size;
  font-weight: $heading3-font-weight;
  line-height: $heading3-line-height;

  @include media(laptop) {
    font-size: $heading3-font-size-laptop;
    font-weight: $heading3-font-weight-laptop;
  }

  @include media(large-laptop) {
    font-size: $heading3-font-size-large-laptop;
  }
}

@mixin text-heading4 {
  font-size: $heading4-font-size;
  font-weight: $heading4-font-weight;
  line-height: $heading4-line-height;
  text-transform: uppercase;

  @include media(laptop) {
    font-size: $heading4-font-size-laptop;
  }

  @include media(large-laptop) {
    font-size: $heading4-font-size-large-laptop;
  }
}

@mixin text-default {
  font-size: $default-font-size;
  font-weight: $default-font-weight;
  line-height: $default-line-height;

  @include media(laptop) {
    font-size: $default-font-size-laptop;
    line-height: $default-line-height-laptop;
  }

  @include media(large-laptop) {
    font-size: $default-font-size-large-laptop;
  }
}

@mixin text-small {
  font-size: $small-font-size;
  font-weight: $small-font-weight;
  line-height: $small-line-height;

  @include media(laptop) {
    font-size: $small-font-size-laptop;
    font-weight: $small-font-weight-laptop;
    line-height: $small-line-height-laptop;
  }

  @include media(large-laptop) {
    font-size: $small-font-size-large-laptop;
  }
}

@mixin text-tiny {
  font-size: $tiny-font-size;
  font-weight: $tiny-font-weight;
  line-height: $tiny-line-height;

  @include media(laptop) {
    font-size: $tiny-font-size-laptop;
    font-weight: $tiny-font-weight-laptop;
  }

  @include media(large-laptop) {
    font-size: $tiny-font-size-large-laptop;
  }
}

@mixin dynamic-content-styles {
  $code-background-color: #333;

  color: $text-color-default;

  & > *:first-child {
    margin-top: 0;
  }

  --indent-level: #{$gap-sm};

  @include media(laptop) {
    --indent-level: #{$gap-md};
  }

  @include media(large-laptop) {
    --indent-level: #{$gap-lg};
  }

  :global {
    .align-left {
      text-align: left;
    }

    .align-center {
      text-align: center;
    }

    .align-right {
      text-align: right;
    }

    .align-justify {
      text-align: justify;
    }

    .align-start {
      text-align: start;
    }

    .align-end {
      text-align: end;
    }

    .indent:has(.indent) {
      padding-left: 0 !important;
    }

    @for $i from 1 through 10 {
      .indent-level-#{$i} {
        padding-left: calc(var(--indent-level) * #{$i});
      }
    }

    .carousel-root {
      margin: $gap-lg 0;

      @include media(laptop) {
        margin: $gap-xl 0;
      }
    }
  }

  h2,
  h3,
  h4 {
    line-height: 1.5 !important;
  }

  h2 {
    @include text-heading2;

    margin: $gap-lg 0 $gap-md;

    @include media(laptop) {
      margin: $gap-xl 0 $gap-lg;
    }
  }

  h3 {
    @include text-heading3;

    margin: $gap-md 0 $gap-sm;

    @include media(laptop) {
      margin: $gap-lg 0 $gap-md;
    }
  }

  h4 {
    @include text-heading4;

    margin: $gap-md 0 $gap-sm;

    @include media(laptop) {
      margin: $gap-lg 0 $gap-md;
    }
  }

  p,
  blockquote {
    @include text-default;

    margin-bottom: $gap-xs;
    font-weight: 500;
    line-height: 1.7 !important;

    @include media(laptop) {
      margin-bottom: $gap-sm;
    }
  }

  em {
    font-style: italic;
  }

  strong {
    font-weight: bold;
  }

  u {
    text-decoration: underline;
    text-decoration-thickness: 1px;

    @include media(laptop) {
      text-decoration-thickness: 2px;
    }
  }

  s {
    text-decoration: line-through;
  }

  sup {
    vertical-align: super;
  }

  sub {
    vertical-align: sub;
  }

  a {
    color: $link-color-secondary;
    text-decoration: underline;
    text-decoration-color: transparent;
    text-decoration-thickness: 2px;
    transition:
      color 0.1s ease-in-out,
      text-decoration-color 0.1s ease-in-out;

    &:hover {
      text-decoration-color: $link-color-secondary;
    }

    @include media(large-laptop) {
      text-decoration-thickness: 3px;
    }
  }

  img {
    display: block;
    width: 100%;
    max-width: 100%;
    height: auto;
    border-radius: $gap-xxs;
    margin: 0 auto;
    margin-bottom: $gap-sm;
    object-fit: contain;

    @include media(tablet) {
      width: 70%;
    }

    @include media(laptop) {
      margin-bottom: $gap-md;
    }
  }

  hr {
    height: 1px;
    border: none;
    margin: $gap-xxl 0 $gap-md;
    background: $text-color-default;

    @include media(laptop) {
      margin: $expanded-gap-md 0 $gap-xl;
    }
  }

  input[type='checkbox'] {
    position: relative;
    display: inline-block;
    height: 0.73rem;
    border: 1px solid $text-color-default-hover;
    border-radius: 2px;
    aspect-ratio: 1;

    @include media(laptop) {
      height: 0.8rem;
      border-radius: 3px;
    }

    @include media(large-laptop) {
      height: 1rem;
    }

    &:checked {
      background: $text-color-default-hover;

      &::before {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 70%;
        aspect-ratio: 1;
        background: $text-color-default;
        content: '';
        mask: url('/icons/check.svg') no-repeat 50% 50%;
        mask-size: contain;
        transform: translate(-50%, -50%);
      }
    }
  }

  li {
    @include text-default;

    display: list-item;
    line-height: 1.375 !important;

    p {
      line-height: inherit;
    }

    &::marker {
      content: unset;
      font: inherit;
    }
  }

  ul,
  ol {
    margin-bottom: $gap-sm;

    @include media(laptop) {
      margin-bottom: $gap-lg;
    }

    ul,
    ol {
      margin-bottom: 7px;
    }

    & > li:has(ul[data-list-type='check']) > input[type='checkbox'],
    & > li:has(ol) > span[data-type='number'] {
      display: none;
    }

    & > li:not(:has(ul, ol)) {
      display: grid;
      align-items: center;
      grid-template-columns: var(--indent-level) 1fr;

      span {
        display: inline-block;
      }

      span[data-type='bullet'] {
        width: 0.3rem;
        border-radius: 100px;
        aspect-ratio: 1;
        background: $white;

        @include media(laptop) {
          width: 0.35rem;
        }

        @include media(large-laptop) {
          width: 0.5rem;
        }
      }
    }
  }

  blockquote {
    position: relative;
    padding-left: var(--indent-level);
    margin-bottom: $gap-xs;
    font-style: italic;

    @include media(laptop) {
      margin-bottom: $gap-md;
    }

    &::before {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: 4px;
      background: $sonic-silver;
      content: '';
    }
  }

  code {
    padding: 0.1rem 0.2rem;
    background: $code-background-color;
    font-family: 'Courier New', Courier, monospace;
    font-size: inherit;
    font-size: 0.93rem;
    line-height: inherit;
    white-space: pre-line;

    @include media(laptop) {
      font-size: 1.05rem;
    }

    @include media(large-laptop) {
      font-size: 1.42rem;
    }
  }

  pre {
    display: block;
    max-width: 100%;
    padding: 1.2rem;
    margin-bottom: $gap-xs;
    background: $code-background-color;
    overflow-x: auto;

    & code {
      padding: 0;
      overflow-x: auto;
      white-space: pre;
      @include text-small;

      @include media(laptop) {
        @include text-tiny;
      }
    }

    @include media(laptop) {
      margin-bottom: $gap-sm;

      &::-webkit-scrollbar {
        height: 2px;
      }

      &::-webkit-scrollbar-track {
        background: transparent;
      }

      &::-webkit-scrollbar-thumb:hover {
        background: $rosso-corsa;
      }
    }
  }
}
